name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: costaatt_hr_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build shared package
      run: npm run build --workspace=@costaatt/shared
    
    - name: Generate Prisma client
      run: npm run db:generate --workspace=@costaatt/api
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/costaatt_hr_test
    
    - name: Run database migrations
      run: npm run db:migrate --workspace=@costaatt/api
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/costaatt_hr_test
    
    - name: Run linting
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/costaatt_hr_test
    
    - name: Build applications
      run: npm run build
    
    - name: Setup Playwright
      run: npx playwright install --with-deps
    
    - name: Run E2E tests
      run: npm run test:e2e --workspace=@costaatt/web
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/costaatt_hr_test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build applications
      run: npm run build
    
    - name: Build Docker images
      run: |
        docker build -t costaatt-hr-api ./apps/api
        docker build -t costaatt-hr-web ./apps/web
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          apps/api/dist
          apps/web/dist
        retention-days: 30

